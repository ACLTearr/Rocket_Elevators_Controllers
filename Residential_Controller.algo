SET numberOfColumns TO 1

SET amountOfElevatorsPerColumn TO 2

SET numberOfBasements TO 0

SET numberOfFloors TO 10

SET totalFloors TO (numberOfFloors PLUS numberOfBasements)

DEFINE Column USING amountOfElevatorsPerColumn AND totalFloors
    SET elevatorCounter TO 1
    SET callButtonCounter TO 1
    SET elevatorList
    SET callButtonList
    FOR amountOfElevatorsPerColumn
        SET elevator CONCAT elevatorCounter TO NEW INSTANCE OF Elevator WITH elevatorCounter AND amountOfElevatorsPerColumn
        INCREMENT elevatorCounter
        ADD TO elevatorList
    ENDFOR
    FOR totalFloors
        IF callButtonCounter NOT EQUAL 1 THEN
            SET callButton CONCAT callButtonCounter CONCAT down TO NEW INSTANCE OF CallButton WITH callButtonCounter AND down
            ADD TO callButtonList
        ENDIF
        IF callButtonCounter NOT EQUAL totalFloors THEN
            SET callButton CONCAT callButtonCounter CONCAT up TO NEW INSTANCE OF CallButton WITH callButtonCounter AND up
            ADD TO callButtonList
        ENDIF
        INCREMENT callButtonCounter                                    
    ENDFOR

=====Sends Elevator to Floor For Pickup=====
    SEQUENCE requestElevator
        GET callButtonList button pressed
        CALL findBestElevator USING CallButton:floorNumber AND CallButton:direction
        SEND bestElevator TO CallButton:floorNumber
        SET Elevator:elevatorFloor TO CallButton:floorNumber
        SET Elevator:elevatorDoors:Doors:state TO open
        Allow people to enter
        INCREMENT currentOccupancy by number of people to enter elevator
        IF currentOccupancy is greater than maxOccupancy THEN
            SET elevatorDisplay TO "MAX OCCUPANCY EXCEEDED" AND wait until currentOccupancy is less than maxOccupancy
        ELSE 
            CALL closeDoor USING Elevator:elevatorDoors:Doors:state
        ENDIF
        =====Finding Best Elevator To Send=====
        "SEQUENCE findBestElevator USING CallButton Floor AND Elevator Direction
            IF Elevator Direction is towards CallButton Floor THEN
                RETURN Elevator as bestElevator
            ELSE
                RETURN next Elevator WHERE CurrentOccupancy is none as bestElevator
            ENDIF
        ENDSEQUENCE
        =====Close door=====
        SEQUENCE closeDoor USING Elevator ElevatorDoor
            IF ElevataorPanelButton:closeDoors is pressed AND Elevator:elevatorDoors:Doors:state are clear of any obstructions THEN
                SET Elevator:elevatorDoors:Doors:state TO closed
            ELSE
                After 3 seconds AND Elevator:elevatorDoors are clear of any obstructions, SET Elevator:elevatorDoors:Doors:state TO closed
            ENDIF
        ENDSEQUENCE"
    ENDSEQUENCE
ENDDEFINE

SET mainColumn TO NEW INSTANCE OF Column

=====Defines Call Button Elements=====
DEFINE CallButton USING callButtonCounter AND direction
    SET id TO callButton CONCAT callButtonCounter CONCAT direction
    SET floorNumber TO callButtonCounter
    SET direction TO direction
ENDDEFINE

=====Defines Elevator Elements=====
DEFINE Elevator USING elevatorCounter AND amountOfElevatorsPerColumn
    SET floorCounter TO 1
    SET currentFloor TO 1
    SET id TO elevator CONCAT elevatorCounter
    SET elevatorButtonsList

=====Sets floor selection buttons within elevator=====
    FOR totalFloors
        SET requestFloor CONCAT floorCounter TO NEW INSTANCE OF ElevataorPanelButton WITH floorCounter AND null
        INCREMENT floorCounter
        ADD TO elevatorButtonsList
    ENDFOR

=====Sets close door button within elevator=====
    FOR amountOfElevatorsPerColumn
        SET closeDoors CONCAT elevatorCounter TO NEW INSTANCE OF ElevataorPanelButton WITH null AND closed AND elevatorCounter
        ADD TO elevatorButtonsList
    ENDFOR

=====Sets open door button within elevator=====
    FOR amountOfElevatorsPerColumn
        SET openDoors CONCAT elevatorCounter TO NEW INSTANCE OF ElevataorPanelButton WITH null AND open AND elevatorCounter
        ADD TO elevatorButtonsList
    ENDFOR
    SET elevatorStatus TO idle
    SET elevatorDirection TO notMoving
    SET currentOccupancy TO 0
    SET maxOccupancy TO 10 'number specified by elevator installed and specific codes'
    SET elevatorDisplay TO elevatorFloor
    SET elevatorDoors TO Doors
    =====Sends Elevator To floor For Dropoff=====
    "SEQUENCE requestFloor
        GET elevatorButtonsList button pressed
        CALL moveElevator USING elevatorButtonsList button pressed
        SET Elevator:elevatorDoors:Doors:state TO open
        allow users to leave
        SET Elevator:elevatorDoors:Doors:state TO closed
        CALL elevatorDefaultPosition WITH Elevator:currentFloor //return to best default position based on where other elevators are
    ENDSEQUENCE"
ENDDEFINE

=====Defines Buttons Contained In Elevator Panel=====
DEFINE ElevataorPanelButton USING floorCounter AND elevatorCounter
    IF requestFloor DOES NOT EQUAL null THEN
        SET id to requestFloor CONCAT floorCounter
    ELSE IF closeDoor EQUALS closed THEN
        SET id to closeDoor CONCAT elevatorCounter
    ELSE IF openDoor EQUALS open THEN
        SET id to closeDoor CONCAT elevatorCounter
    ENDIF
    SET floorRequested
    SET closeDoor
    SET openDoor
ENDDEFINE

=====Defines Door Elements=====
DEFINE Doors
    SET state TO closed
ENDDEFINE