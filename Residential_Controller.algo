//Default Function to Start Program
//SEQUENCE runElevator
    
    //CALL requestElevator
    
    //CALL requestFloor

//ENDSEQUENCE

SET amountOfElevators TO 2

SET numberOfFloors TO 10

DEFINE Column USING amountOfElevators AND numberOfFloors

    SET elevatorCounter TO 1

    SET callButtonCounter TO 1

    SET callButtonDirection TO up

    FOR amountOfElevators
        SET elevator TO NEW INSTANCE OF Elevator WITH elevatorCounter
        INCREMENT elevatorCounter
    ENDFOR

    //Expected Outputs//
    elevator1
    elevator2

    FOR (numberOfFloors multiplied by 2 minus 2)
        SET callButton TO NEW INSTANCE OF CallButton WITH callButtonCounter AND callButtonDirection
        IF callButtonDirection IS up THEN
            SET callButtonDirection TO down
            INCREMENT callButtonCounter
        ELSE
            SET callButtonDirection TO up
        ENDIF
    ENDFOR

    //Expected Outputs//
    callButton1up
    callButton2down
    callButton2up
    callButton3down
    callButton3up
    callButton4down
    callButton4up
    callButton5down
    callButton5up
    callButton6down
    callButton6up
    callButton7down
    callButton7up
    callButton8down
    callButton8up
    callButton9down
    callButton9up
    callButton10down

    //Sends Elevator to Floor For Pickup
    SEQUENCE requestElevator

        GET CallButton

        CALL findBestElevator USING CallButton FloorNumber AND CallButton Direction

        SEND bestElevator TO CallButton FloorNumber

        SET Elevator Floor TO CallButton FloorNumber

        SET Elevator ElevatorDoors TO open

        Allow people to enter

        INCREMENT CurrentOccupancy by number of people to enter elevator

        IF CurrentOccupancy is greater than MaxOccupancy THEN

            //Display warning in elevator, wait for people to leave

        ELSE 

            CALL closeDoor USING Elevator ElevatorDoor

        ENDIF

    ENDSEQUENCE

ENDDEFINE

SET mainColumn TO NEW INSTANCE OF Column

//Defines Call Button Elements
DEFINE CallButton

    SET FloorNumber TO callButtonCounter

    SET Direction TO callButtonDirection

ENDDEFINE

//Defines Elevator Elements
DEFINE Elevator

    SET floorCounter TO 1

    SET Floor TO 1

    FOR numberOfFloors

        SET requestFloor TO NEW INSTANCE OF FloorRequestButton WITH floorCounter
        INCREMENT floorCounter

    ENDFOR

    //Expected Outputs
    requestFloor1
    requestFloor2
    requestFloor3
    requestFloor4
    requestFloor5
    requestFloor6
    requestFloor7
    requestFloor8
    requestFloor9
    requestFloor10

    SET Status TO idle

    SET Direction TO notMoving

    SET CurrentOccupancy TO 0

    SET MaxOccupancy TO 10 'number specified by elevator installed and specific codes'

    SET FloorDisplay TO Floor

    SET ElevatorDoors TO Doors State

ENDDEFINE

//Defines Buttons Contained In Elevator Panel
DEFINE FloorRequestButton

    SET requestFloor TO floorCounter

    SET closeDoorButton TO close

ENDDEFINE

//Defines Door Elements
DEFINE Doors

    SET State TO closed

ENDDEFINE

//Finding Best Elevator To Send
SEQUENCE findBestElevator USING CallButton Floor AND Elevator Direction

    IF Elevator Direction is towards CallButton Floor THEN

        RETURN Elevator as bestElevator

    ELSE

        RETURN next Elevator WHERE CurrentOccupancy is none as bestElevator

    ENDIF

ENDSEQUENCE

//Close door
SEQUENCE closeDoor USING Elevator ElevatorDoor

    IF FloorRequestButton closeDoorButton is pressed AND Elevator ElevatorDoors are clear of any obstructions THEN

        SET Elevator ElevatorDoor TO closed

    ELSE

        After 5 seconds AND Elevator ElevatorDoors are clear of any obstructions, SET Elevator ElevatorDoor TO closed

    ENDIF

ENDSEQUENCE

//Sends Elevator To floor For Dropoff
SEQUENCE requestFloor

    GET FloorRequestButton

    CHECK FloorRequestButton is pressed AND MaxOccupancy is not reached

    CALL moveElevator USING FloorRequestButton Floor

    SET Elevator ElevatorDoors TO open

    allow users to leave

    SET Elevator ElevatorDoors TO closed

    CALL elevatorDefaultPosition WITH Elevator Floor //return to best default position based on where other elevators are

ENDSEQUENCE

   